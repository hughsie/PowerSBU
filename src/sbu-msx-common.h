/*
 * Copyright (C) 2017 Richard Hughes <richard@hughsie.com>
 *
 * SPDX-License-Identifier: GPL-2+
 */

#pragma once

#include <glib-object.h>

typedef enum {
	SBU_MSX_DEVICE_KEY_UNKNOWN,
	SBU_MSX_DEVICE_KEY_GRID_RATING_VOLTAGE,
	SBU_MSX_DEVICE_KEY_GRID_RATING_CURRENT,
	SBU_MSX_DEVICE_KEY_AC_OUTPUT_RATING_VOLTAGE,
	SBU_MSX_DEVICE_KEY_AC_OUTPUT_RATING_FREQUENCY,
	SBU_MSX_DEVICE_KEY_AC_OUTPUT_RATING_CURRENT,
	SBU_MSX_DEVICE_KEY_AC_OUTPUT_RATING_APPARENT_POWER,
	SBU_MSX_DEVICE_KEY_AC_OUTPUT_RATING_ACTIVE_POWER,
	SBU_MSX_DEVICE_KEY_BATTERY_RATING_VOLTAGE,
	SBU_MSX_DEVICE_KEY_BATTERY_RECHARGE_VOLTAGE,
	SBU_MSX_DEVICE_KEY_BATTERY_UNDER_VOLTAGE,
	SBU_MSX_DEVICE_KEY_BATTERY_BULK_VOLTAGE,
	SBU_MSX_DEVICE_KEY_BATTERY_FLOAT_VOLTAGE,
	SBU_MSX_DEVICE_KEY_BATTERY_TYPE,
	SBU_MSX_DEVICE_KEY_PRESENT_MAX_AC_CHARGING_CURRENT,
	SBU_MSX_DEVICE_KEY_PRESENT_MAX_CHARGING_CURRENT,
	SBU_MSX_DEVICE_KEY_INPUT_VOLTAGE_RANGE,
	SBU_MSX_DEVICE_KEY_OUTPUT_SOURCE_PRIORITY,
	SBU_MSX_DEVICE_KEY_CHARGER_SOURCE_PRIORITY,
	SBU_MSX_DEVICE_KEY_PARALLEL_MAX_NUM,
	SBU_MSX_DEVICE_KEY_MACHINE_TYPE,
	SBU_MSX_DEVICE_KEY_TOPOLOGY,
	SBU_MSX_DEVICE_KEY_OUTPUT_MODE,
	SBU_MSX_DEVICE_KEY_BATTERY_REDISCHARGE_VOLTAGE,
	SBU_MSX_DEVICE_KEY_PV_OK_CONDITION_FOR_PARALLEL,
	SBU_MSX_DEVICE_KEY_PV_POWER_BALANCE,
	SBU_MSX_DEVICE_KEY_GRID_VOLTAGE,
	SBU_MSX_DEVICE_KEY_GRID_FREQUENCY,
	SBU_MSX_DEVICE_KEY_AC_OUTPUT_VOLTAGE,
	SBU_MSX_DEVICE_KEY_AC_OUTPUT_FREQUENCY,
	SBU_MSX_DEVICE_KEY_AC_OUTPUT_POWER,
	SBU_MSX_DEVICE_KEY_AC_OUTPUT_ACTIVE_POWER,
	SBU_MSX_DEVICE_KEY_MAXIMUM_POWER_PERCENTAGE,
	SBU_MSX_DEVICE_KEY_BUS_VOLTAGE,
	SBU_MSX_DEVICE_KEY_BATTERY_VOLTAGE,
	SBU_MSX_DEVICE_KEY_BATTERY_CURRENT,
	SBU_MSX_DEVICE_KEY_BATTERY_CAPACITY,
	SBU_MSX_DEVICE_KEY_INVERTER_HEATSINK_TEMPERATURE,
	SBU_MSX_DEVICE_KEY_PV_INPUT_CURRENT_FOR_BATTERY,
	SBU_MSX_DEVICE_KEY_PV_INPUT_VOLTAGE,
	SBU_MSX_DEVICE_KEY_BATTERY_VOLTAGE_FROM_SCC,
	SBU_MSX_DEVICE_KEY_BATTERY_DISCHARGE_CURRENT,
	SBU_MSX_DEVICE_KEY_ADD_SBU_PRIORITY_VERSION,
	SBU_MSX_DEVICE_KEY_CONFIGURATION_STATUS_CHANGE,
	SBU_MSX_DEVICE_KEY_SCC_FIRMWARE_VERSION_UPDATED,
	SBU_MSX_DEVICE_KEY_LOAD_STATUS_ON,
	SBU_MSX_DEVICE_KEY_BATTERY_VOLTAGE_TO_STEADY_WHILE_CHARGING,
	SBU_MSX_DEVICE_KEY_CHARGING_ON,
	SBU_MSX_DEVICE_KEY_CHARGING_ON_SOLAR,
	SBU_MSX_DEVICE_KEY_CHARGING_ON_AC,
	SBU_MSX_DEVICE_KEY_ENABLE_BUZZER,
	SBU_MSX_DEVICE_KEY_OVERLOAD_BYPASS_FUNCTION,
	SBU_MSX_DEVICE_KEY_POWER_SAVE,
	SBU_MSX_DEVICE_KEY_LCD_DISPLAY_ESCAPE,
	SBU_MSX_DEVICE_KEY_OVERLOAD_RESTART,
	SBU_MSX_DEVICE_KEY_OVER_TEMPERATURE_RESTART,
	SBU_MSX_DEVICE_KEY_LCD_BACKLIGHT,
	SBU_MSX_DEVICE_KEY_ALARM_PRIMARY_SOURCE_INTERRUPT,
	SBU_MSX_DEVICE_KEY_FAULT_CODE_RECORD,
	SBU_MSX_DEVICE_KEY_BATTERY_VOLTAGE_OFFSET_FOR_FANS,
	SBU_MSX_DEVICE_KEY_EEPROM_VERSION,
	SBU_MSX_DEVICE_KEY_PV_CHARGING_POWER,
	SBU_MSX_DEVICE_KEY_CHARGING_TO_FLOATING_MODE,
	SBU_MSX_DEVICE_KEY_SWITCH_ON,
	SBU_MSX_DEVICE_KEY_LAST
} SbuMsxDeviceKey;

typedef enum {
	SBU_MSX_DEVICE_OUTPUT_SOURCE_PRIORITY_UTILITY,
	SBU_MSX_DEVICE_OUTPUT_SOURCE_PRIORITY_SOLAR,
	SBU_MSX_DEVICE_OUTPUT_SOURCE_PRIORITY_SBU,
	SBU_MSX_DEVICE_OUTPUT_SOURCE_PRIORITY_LAST
} SbuMsxDeviceOutputSourcePriority;

gint
sbu_msx_common_parse_int(const gchar *buf, gsize off, gssize buflen, GError **error);

const gchar *
sbu_device_key_to_string(SbuMsxDeviceKey key);
