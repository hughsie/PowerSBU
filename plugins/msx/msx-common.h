/* -*- Mode: C; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*-
 *
 * Copyright (C) 2017 Richard Hughes <richard@hughsie.com>
 *
 * Licensed under the GNU General Public License Version 2
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#ifndef __MSX_COMMON_H
#define __MSX_COMMON_H

#include <glib-object.h>

G_BEGIN_DECLS

typedef enum {
	MSX_DEVICE_KEY_UNKNOWN,
	MSX_DEVICE_KEY_GRID_RATING_VOLTAGE,
	MSX_DEVICE_KEY_GRID_RATING_CURRENT,
	MSX_DEVICE_KEY_AC_OUTPUT_RATING_VOLTAGE,
	MSX_DEVICE_KEY_AC_OUTPUT_RATING_FREQUENCY,
	MSX_DEVICE_KEY_AC_OUTPUT_RATING_CURRENT,
	MSX_DEVICE_KEY_AC_OUTPUT_RATING_APPARENT_POWER,
	MSX_DEVICE_KEY_AC_OUTPUT_RATING_ACTIVE_POWER,
	MSX_DEVICE_KEY_BATTERY_RATING_VOLTAGE,
	MSX_DEVICE_KEY_BATTERY_RECHARGE_VOLTAGE,
	MSX_DEVICE_KEY_BATTERY_UNDER_VOLTAGE,
	MSX_DEVICE_KEY_BATTERY_BULK_VOLTAGE,
	MSX_DEVICE_KEY_BATTERY_FLOAT_VOLTAGE,
	MSX_DEVICE_KEY_BATTERY_TYPE,
	MSX_DEVICE_KEY_PRESENT_MAX_AC_CHARGING_CURRENT,
	MSX_DEVICE_KEY_PRESENT_MAX_CHARGING_CURRENT,
	MSX_DEVICE_KEY_INPUT_VOLTAGE_RANGE,
	MSX_DEVICE_KEY_OUTPUT_SOURCE_PRIORITY,
	MSX_DEVICE_KEY_CHARGER_SOURCE_PRIORITY,
	MSX_DEVICE_KEY_PARALLEL_MAX_NUM,
	MSX_DEVICE_KEY_MACHINE_TYPE,
	MSX_DEVICE_KEY_TOPOLOGY,
	MSX_DEVICE_KEY_OUTPUT_MODE,
	MSX_DEVICE_KEY_BATTERY_REDISCHARGE_VOLTAGE,
	MSX_DEVICE_KEY_PV_OK_CONDITION_FOR_PARALLEL,
	MSX_DEVICE_KEY_PV_POWER_BALANCE,
	MSX_DEVICE_KEY_GRID_VOLTAGE,
	MSX_DEVICE_KEY_GRID_FREQUENCY,
	MSX_DEVICE_KEY_AC_OUTPUT_VOLTAGE,
	MSX_DEVICE_KEY_AC_OUTPUT_FREQUENCY,
	MSX_DEVICE_KEY_AC_OUTPUT_POWER,
	MSX_DEVICE_KEY_AC_OUTPUT_ACTIVE_POWER,
	MSX_DEVICE_KEY_MAXIMUM_POWER_PERCENTAGE,
	MSX_DEVICE_KEY_BUS_VOLTAGE,
	MSX_DEVICE_KEY_BATTERY_VOLTAGE,
	MSX_DEVICE_KEY_BATTERY_CURRENT,
	MSX_DEVICE_KEY_BATTERY_CAPACITY,
	MSX_DEVICE_KEY_INVERTER_HEATSINK_TEMPERATURE,
	MSX_DEVICE_KEY_PV_INPUT_CURRENT_FOR_BATTERY,
	MSX_DEVICE_KEY_PV_INPUT_VOLTAGE,
	MSX_DEVICE_KEY_BATTERY_VOLTAGE_FROM_SCC,
	MSX_DEVICE_KEY_BATTERY_DISCHARGE_CURRENT,
	MSX_DEVICE_KEY_ADD_SBU_PRIORITY_VERSION,
	MSX_DEVICE_KEY_CONFIGURATION_STATUS_CHANGE,
	MSX_DEVICE_KEY_SCC_FIRMWARE_VERSION_UPDATED,
	MSX_DEVICE_KEY_LOAD_STATUS_ON,
	MSX_DEVICE_KEY_BATTERY_VOLTAGE_TO_STEADY_WHILE_CHARGING,
	MSX_DEVICE_KEY_CHARGING_ON,
	MSX_DEVICE_KEY_CHARGING_ON_SOLAR,
	MSX_DEVICE_KEY_CHARGING_ON_AC,
	MSX_DEVICE_KEY_ENABLE_BUZZER,
	MSX_DEVICE_KEY_OVERLOAD_BYPASS_FUNCTION,
	MSX_DEVICE_KEY_POWER_SAVE,
	MSX_DEVICE_KEY_LCD_DISPLAY_ESCAPE,
	MSX_DEVICE_KEY_OVERLOAD_RESTART,
	MSX_DEVICE_KEY_OVER_TEMPERATURE_RESTART,
	MSX_DEVICE_KEY_LCD_BACKLIGHT,
	MSX_DEVICE_KEY_ALARM_PRIMARY_SOURCE_INTERRUPT,
	MSX_DEVICE_KEY_FAULT_CODE_RECORD,
	MSX_DEVICE_KEY_LAST
} MsxDeviceKey;

typedef enum {
	MSX_DEVICE_OUTPUT_SOURCE_PRIORITY_UTILITY,
	MSX_DEVICE_OUTPUT_SOURCE_PRIORITY_SOLAR,
	MSX_DEVICE_OUTPUT_SOURCE_PRIORITY_SBU,
	MSX_DEVICE_OUTPUT_SOURCE_PRIORITY_LAST
} MsxDeviceOutputSourcePriority;

gint		 msx_common_parse_int			(const gchar	*buf,
							 gsize		 off,
							 gssize		 buflen,
							 GError		**error);

const gchar	*sbu_device_key_to_string		(MsxDeviceKey	 key);

G_END_DECLS

#endif /* __MSX_COMMON_H */
